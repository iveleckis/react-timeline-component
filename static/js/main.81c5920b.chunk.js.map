{"version":3,"sources":["timeline/CONSTANTS.js","timeline/BodySplitter.js","timeline/Track.js","timeline/Group.js","timeline/Body.js","timeline/Header.js","timeline/Timeline.js","App.js","reportWebVitals.js","index.js"],"names":["months","short_name_letters","numerical_expression","days","track_color_pool","data_for_testing","start_date","end_date","title","group","details","styling","Math","floor","random","length","BodySplitter","parts_to_split_into","Dividers","dividers","i","push","style","zIndex","className","month_string","divider_width","find","month","toFixed","width","Track","track_length_by_index","track_start_by_index","track_styling","date","useState","expandTrackInfo","setExpandTrackInfo","marginLeft","height","onClick","Group","list_of_group_items","global_year","global_month","children","listOfGroupItemsWithIndexes","setListOfGroupItemsWithIndexes","determine_item_range_by_global_date","item","year","item_range_indexes","start","end","item_start_date","item_end_date","current_year_month","item_start_year_month","split","splice","join","item_end_year_month","end_index","date_index_in_current_year_month","start_index","current_year","String","item_start_year","item_end_year","date_index_in_current_year","current_date_range","date_to_be_indexed","current_year_date","Date","date_to_be_indexed_date","how_many_days_passed","ceil","Number","current_range_month","current_month_days","useEffect","all_data","all_data_with_indexes","item_with_indexes","filter_and_setup_for_rendering","map","group_item","item_start","item_length","get_window_width","window","innerWidth","Body","all_groups","filteredGroups","setFilteredGroups","windowWidth","setWindowWidth","groupWidth","setGroupWidth","filter_out_items_by_date_range","filter","start_year_month","end_year_month","global_year_month","start_year","end_year","groups","filtered_groups_group","group_filtered_by_range","prepare_group_data","calculated_width","days_to_count_from","handleResize","addEventListener","removeEventListener","month_with_props","Header","new_global_year","new_global_month","possible_years","showYearOptions","setShowYearOptions","MonthDays","current_month_details","Timeline","timeline_data","getFullYear","globalYear","setGlobalYear","globalMonth","setGlobalMonth","possibleYears","setPossibleYears","groupOfGroups","setGroupOfGroups","find_different_groups","array","different_group_count","includes","create_new_group","group_name","data_for_extraction","new_group","j","years","data_to_pick_from","sort","a","b","setup_possible_years","group_of_groups","raw_data","create_group_of_groups","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81c5920b.chunk.js","sourcesContent":["export const months = [\r\n    { short_name_letters: 'Jan.', numerical_expression: '01', days: 31 },\r\n    { short_name_letters: 'Feb.', numerical_expression: '02', days: 28 },\r\n    { short_name_letters: 'Mar.', numerical_expression: '03', days: 31 },\r\n    { short_name_letters: 'Apr.', numerical_expression: '04', days: 30 },\r\n    { short_name_letters: 'May', numerical_expression: '05', days: 31 },\r\n    { short_name_letters: 'Jun.', numerical_expression: '06', days: 30 },\r\n    { short_name_letters: 'Jul.', numerical_expression: '07', days: 31 },\r\n    { short_name_letters: 'Aug.', numerical_expression: '08', days: 31 },\r\n    { short_name_letters: 'Sep.', numerical_expression: '09', days: 30 },\r\n    { short_name_letters: 'Oct.', numerical_expression: '10', days: 31 },\r\n    { short_name_letters: 'Nov.', numerical_expression: '11', days: 30 },\r\n    { short_name_letters: 'Dec.', numerical_expression: '12', days: 31 },\r\n];\r\n\r\nexport const track_color_pool = [\r\n    `bg-red-100 border-red-700`,\r\n    `bg-red-200 border-red-700`,\r\n    `bg-red-300 border-red-700`,\r\n    `bg-blue-100 border-blue-700`,\r\n    `bg-blue-200 border-blue-700`,\r\n    `bg-blue-300 border-blue-700`,\r\n    `bg-blue-400 border-blue-700`,\r\n    `bg-green-100 border-green-700`,\r\n    `bg-green-200 border-green-700`,\r\n    `bg-green-300 border-green-700`,\r\n    `bg-green-400 border-green-700`,\r\n    `bg-yellow-100 border-yellow-700`,\r\n    `bg-yellow-200 border-yellow-700`,\r\n    `bg-yellow-300 border-yellow-700`,\r\n    `bg-yellow-400 border-yellow-700`,\r\n    `bg-pink-100 border-pink-700`,\r\n    `bg-pink-200 border-pink-700`,\r\n    `bg-pink-300 border-pink-700`,\r\n    `bg-pink-400 border-pink-700`,\r\n    `bg-gray-100 border-gray-700`,\r\n    `bg-gray-200 border-gray-700`,\r\n    `bg-gray-300 border-gray-700`,\r\n    `bg-gray-400 border-gray-700`,\r\n    `bg-indigo-100 border-indigo-700`,\r\n    `bg-indigo-200 border-indigo-700`,\r\n    `bg-indigo-300 border-indigo-700`,\r\n    `bg-indigo-400 border-indigo-700`,\r\n    `bg-purple-100 border-purple-700`,\r\n    `bg-purple-200 border-purple-700`,\r\n    `bg-purple-300 border-purple-700`,\r\n    `bg-purple-400 border-purple-700`,\r\n];\r\n\r\nexport const data_for_testing = [\r\n    {\r\n        start_date: '2021.03.11',\r\n        end_date: '2021.09.17',\r\n        title: 'a',\r\n        group: 'group a',\r\n        details: 'aaa',\r\n        styling:\r\n            track_color_pool[\r\n                Math.floor(Math.random() * track_color_pool.length)\r\n            ],\r\n    },\r\n    {\r\n        start_date: '2020.03.11',\r\n        end_date: '2021.02.17',\r\n        title: 'b',\r\n        group: 'group a',\r\n        details: 'bbb',\r\n        styling:\r\n            track_color_pool[\r\n                Math.floor(Math.random() * track_color_pool.length)\r\n            ],\r\n    },\r\n    {\r\n        start_date: '2021.06.11',\r\n        end_date: '2022.01.17',\r\n        title: 'c',\r\n        group: 'group a',\r\n        details: 'ccc',\r\n        styling:\r\n            track_color_pool[\r\n                Math.floor(Math.random() * track_color_pool.length)\r\n            ],\r\n    },\r\n    {\r\n        start_date: '2021.02.11',\r\n        end_date: '2021.03.17',\r\n        title: 'a',\r\n        group: 'group b',\r\n        details: 'aaa',\r\n        styling:\r\n            track_color_pool[\r\n                Math.floor(Math.random() * track_color_pool.length)\r\n            ],\r\n    },\r\n    {\r\n        start_date: '2021.03.11',\r\n        end_date: '2021.07.17',\r\n        title: 'b',\r\n        group: 'group b',\r\n        details: 'bbb',\r\n        styling:\r\n            track_color_pool[\r\n                Math.floor(Math.random() * track_color_pool.length)\r\n            ],\r\n    },\r\n    {\r\n        start_date: '2021.02.11',\r\n        end_date: '2022.03.17',\r\n        title: 'c',\r\n        group: 'group b',\r\n        details: 'ccc',\r\n        styling:\r\n            track_color_pool[\r\n                Math.floor(Math.random() * track_color_pool.length)\r\n            ],\r\n    },\r\n    {\r\n        start_date: '2020.02.11',\r\n        end_date: '2020.08.17',\r\n        title: 'a',\r\n        group: 'group c',\r\n        details: 'aaa',\r\n        styling:\r\n            track_color_pool[\r\n                Math.floor(Math.random() * track_color_pool.length)\r\n            ],\r\n    },\r\n    {\r\n        start_date: '2020.08.11',\r\n        end_date: '2022.01.17',\r\n        title: 'b',\r\n        group: 'group c',\r\n        details: 'bbb',\r\n        styling:\r\n            track_color_pool[\r\n                Math.floor(Math.random() * track_color_pool.length)\r\n            ],\r\n    },\r\n    {\r\n        start_date: '2020.10.11',\r\n        end_date: '2021.04.17',\r\n        title: 'c',\r\n        group: 'group c',\r\n        details: 'ccc',\r\n        styling:\r\n            track_color_pool[\r\n                Math.floor(Math.random() * track_color_pool.length)\r\n            ],\r\n    },\r\n    {\r\n        start_date: '2020.01.11',\r\n        end_date: '2022.12.17',\r\n        title: 'c',\r\n        group: 'group c',\r\n        details: 'ccc',\r\n        styling:\r\n            track_color_pool[\r\n                Math.floor(Math.random() * track_color_pool.length)\r\n            ],\r\n    },\r\n];\r\n","import React from \"react\";\r\nimport { months } from \"./CONSTANTS\";\r\n\r\nconst BodySplitter = ({ parts_to_split_into }) => {\r\n  const Dividers = () => {\r\n    const dividers = [];\r\n    for (let i = 0; i < parts_to_split_into; i++) {\r\n      if (parts_to_split_into !== 12) {\r\n        dividers.push(\r\n          <div\r\n            key={i}\r\n            style={{ zIndex: \"-10\" }}\r\n            className=\"w-full h-full border-r border-l border-gray-100\"\r\n          />\r\n        );\r\n      } else {\r\n        const month_string = i < 9 ? `0${i + 1}` : `${i + 1}`;\r\n        const current_month = months.find(\r\n          (month) => month.numerical_expression === month_string\r\n        );\r\n        const divider_width = ((current_month.days / 365) * 100).toFixed(3);\r\n        dividers.push(\r\n          <div\r\n            key={i}\r\n            style={{ zIndex: \"-10\", width: `${divider_width}%` }}\r\n            className=\"h-full border-r border-l border-gray-200\"\r\n          />\r\n        );\r\n      }\r\n    }\r\n    return dividers;\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full h-full flex\">\r\n      <Dividers />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BodySplitter;\r\n","import React, { useState } from \"react\";\r\n\r\nconst Track = ({\r\n  track_length_by_index,\r\n  track_start_by_index,\r\n  title,\r\n  track_styling,\r\n  details,\r\n  date,\r\n}) => {\r\n  const [expandTrackInfo, setExpandTrackInfo] = useState(false);\r\n\r\n  return (\r\n    <div className=\"relative z-50 select-none\">\r\n      <div\r\n        style={{\r\n          width: `${expandTrackInfo ? 100 : track_length_by_index}%`,\r\n          marginLeft: `${expandTrackInfo ? 0 : track_start_by_index}%`,\r\n          height: \"auto\",\r\n        }}\r\n        onClick={() => setExpandTrackInfo(!expandTrackInfo)}\r\n        className={`flex justify-center cursor-pointer overflow-x-hidden transition-all duration-500 items-center font-bold text-gray-800 my-2 rounded border-2 ${track_styling}`}\r\n      >\r\n        {expandTrackInfo ? (\r\n          <div className=\"flex-col text-sm text-center\">\r\n            <div className=\"whitespace-nowrap\">{title}</div>\r\n            <div className=\"whitespace-nowrap\">{date}</div>\r\n            <div className=\"whitespace-nowrap\">{details}</div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"overflow-hidden truncate\">{title}</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Track;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { months } from \"./CONSTANTS\";\r\nimport Track from \"./Track\";\r\n\r\nconst Group = ({\r\n  list_of_group_items,\r\n  global_year,\r\n  global_month,\r\n  children,\r\n}) => {\r\n  const [\r\n    listOfGroupItemsWithIndexes,\r\n    setListOfGroupItemsWithIndexes,\r\n  ] = useState();\r\n\r\n  const filter_and_setup_for_rendering = (all_data, year, month) => {\r\n    const all_data_with_indexes = [];\r\n    for (let i in all_data) {\r\n      const item_range_indexes = determine_item_range_by_global_date(\r\n        all_data[i],\r\n        year,\r\n        month\r\n      );\r\n      const item_with_indexes = {\r\n        ...all_data[i],\r\n        start_index: item_range_indexes.start,\r\n        end_index: item_range_indexes.end,\r\n      };\r\n      all_data_with_indexes.push(item_with_indexes);\r\n    }\r\n    setListOfGroupItemsWithIndexes(all_data_with_indexes);\r\n  };\r\n\r\n  const determine_item_range_by_global_date = (item, year, month) => {\r\n    const item_range_indexes = { start: \"not_set\", end: \"not_set\" };\r\n    const item_start_date = item.start_date;\r\n    const item_end_date = item.end_date;\r\n    if (!month) {\r\n      const current_year = String(year);\r\n\r\n      const item_start_year = item.start_date.split(\"\").splice(0, 4).join(\"\");\r\n      const item_end_year = item.end_date.split(\"\").splice(0, 4).join(\"\");\r\n\r\n      if (item_start_year < current_year) {\r\n        item_range_indexes.start = 0;\r\n      }\r\n      if (item_end_year > current_year) {\r\n        item_range_indexes.end = 1;\r\n      }\r\n      if (item_end_year === current_year) {\r\n        const end_index = date_index_in_current_year(\r\n          current_year,\r\n          item_end_date\r\n        );\r\n        item_range_indexes.end = end_index;\r\n      }\r\n      if (item_start_year === current_year) {\r\n        const start_index = date_index_in_current_year(\r\n          current_year,\r\n          item_start_date\r\n        );\r\n        item_range_indexes.start = start_index;\r\n      }\r\n    } else {\r\n      const current_year_month = `${year}.${month}`;\r\n\r\n      const item_start_year_month = item.start_date\r\n        .split(\"\")\r\n        .splice(0, 7)\r\n        .join(\"\");\r\n      const item_end_year_month = item.end_date.split(\"\").splice(0, 7).join(\"\");\r\n\r\n      if (item_start_year_month < current_year_month) {\r\n        item_range_indexes.start = 0;\r\n      }\r\n      if (item_end_year_month > current_year_month) {\r\n        item_range_indexes.end = 1;\r\n      }\r\n      if (item_end_year_month === current_year_month) {\r\n        const end_index = date_index_in_current_year_month(\r\n          current_year_month,\r\n          item_end_date\r\n        );\r\n        item_range_indexes.end = end_index;\r\n      }\r\n      if (item_start_year_month === current_year_month) {\r\n        const start_index = date_index_in_current_year_month(\r\n          current_year_month,\r\n          item_start_date\r\n        );\r\n        item_range_indexes.start = start_index;\r\n      }\r\n    }\r\n    return item_range_indexes;\r\n  };\r\n\r\n  const date_index_in_current_year = (\r\n    current_date_range,\r\n    date_to_be_indexed\r\n  ) => {\r\n    const current_year_date = new Date(current_date_range);\r\n    const date_to_be_indexed_date = new Date(date_to_be_indexed);\r\n    const how_many_days_passed = Math.ceil(\r\n      (date_to_be_indexed_date - current_year_date) / 86400000\r\n    );\r\n    return Number((how_many_days_passed / 365).toFixed(2));\r\n  };\r\n\r\n  const date_index_in_current_year_month = (\r\n    current_date_range,\r\n    date_to_be_indexed\r\n  ) => {\r\n    const current_year_date = new Date(current_date_range);\r\n    const date_to_be_indexed_date = new Date(date_to_be_indexed);\r\n    const how_many_days_passed = Math.ceil(\r\n      (date_to_be_indexed_date - current_year_date) / 86400000\r\n    );\r\n\r\n    const current_range_month = current_date_range\r\n      .split(\"\")\r\n      .splice(5, 2)\r\n      .join(\"\");\r\n\r\n    const current_month_days = months.find(\r\n      (month) => month.numerical_expression === current_range_month\r\n    ).days;\r\n\r\n    return Number((how_many_days_passed / current_month_days).toFixed(2));\r\n  };\r\n\r\n  useEffect(() => {\r\n    filter_and_setup_for_rendering(\r\n      list_of_group_items,\r\n      global_year,\r\n      global_month\r\n    );\r\n    // eslint-disable-next-line\r\n  }, [list_of_group_items, global_year, global_month]);\r\n\r\n  return (\r\n    <>\r\n      {listOfGroupItemsWithIndexes && (\r\n        <div className=\"flex w-full\">\r\n          <div className=\"flex items-center justify-center w-40 flex-shrink-0 bg-white shadow-r uppercase font-bold text-gray-600\">\r\n            {listOfGroupItemsWithIndexes[0] &&\r\n              listOfGroupItemsWithIndexes[0].group}\r\n          </div>\r\n          <div className=\"w-full relative\">\r\n            {listOfGroupItemsWithIndexes.map((group_item, i) => {\r\n              const item_start = group_item.start_index * 100;\r\n              const item_length = (\r\n                (group_item.end_index - group_item.start_index) *\r\n                100\r\n              ).toFixed(0);\r\n\r\n              return (\r\n                <Track\r\n                  key={i}\r\n                  track_length_by_index={item_length}\r\n                  track_start_by_index={item_start}\r\n                  title={group_item.title}\r\n                  track_styling={group_item.styling ? group_item.styling : \"\"}\r\n                  details={group_item.details}\r\n                  date={`${group_item.start_date} - ${group_item.end_date}`}\r\n                />\r\n              );\r\n            })}\r\n            <div className=\"absolute z-30 top-0 left-0 w-full h-full\">\r\n              {children}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Group;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport BodySplitter from \"./BodySplitter\";\r\nimport Group from \"./Group\";\r\nimport { months } from \"./CONSTANTS\";\r\n\r\nconst get_window_width = () => {\r\n  const { innerWidth: width } = window;\r\n  return width;\r\n};\r\n\r\nconst Body = ({ all_groups, global_year, global_month }) => {\r\n  const [filteredGroups, setFilteredGroups] = useState([]);\r\n\r\n  const [windowWidth, setWindowWidth] = useState(get_window_width());\r\n\r\n  const [groupWidth, setGroupWidth] = useState();\r\n\r\n  const set_splitter_by_global_date = (year, month) => {\r\n    if (!month) {\r\n      return 12;\r\n    } else {\r\n      const current_month_properties = months.find(\r\n        (month_with_props) => month_with_props.numerical_expression === month\r\n      );\r\n      return current_month_properties.days;\r\n    }\r\n  };\r\n\r\n  const prepare_group_data = (groups, year, month) => {\r\n    const filtered_groups_group = [];\r\n    for (let i in groups) {\r\n      const group_filtered_by_range = filter_out_items_by_date_range(\r\n        groups[i],\r\n        year,\r\n        month\r\n      );\r\n      filtered_groups_group.push(group_filtered_by_range);\r\n    }\r\n    setFilteredGroups(filtered_groups_group);\r\n  };\r\n\r\n  const filter_out_items_by_date_range = (all_data, year, month) => {\r\n    let start_to_end_includes_current;\r\n    if (!month) {\r\n      start_to_end_includes_current = all_data.filter((item) => {\r\n        const start_year = Number(\r\n          item.start_date.split(\"\").splice(0, 4).join(\"\")\r\n        );\r\n        const end_year = Number(item.end_date.split(\"\").splice(0, 4).join(\"\"));\r\n        return (\r\n          end_year === year ||\r\n          start_year === year ||\r\n          (start_year < year && end_year > year)\r\n        );\r\n      });\r\n    } else {\r\n      start_to_end_includes_current = all_data.filter((item) => {\r\n        const start_year_month = item.start_date\r\n          .split(\"\")\r\n          .splice(0, 7)\r\n          .join(\"\");\r\n        const end_year_month = item.end_date.split(\"\").splice(0, 7).join(\"\");\r\n        const global_year_month = `${year}.${month}`;\r\n        return (\r\n          end_year_month === global_year_month ||\r\n          start_year_month === global_year_month ||\r\n          (start_year_month < global_year_month &&\r\n            end_year_month > global_year_month)\r\n        );\r\n      });\r\n    }\r\n    return start_to_end_includes_current;\r\n  };\r\n\r\n  const calculate_width = (days_to_count_from) => {\r\n    const full_width =\r\n      days_to_count_from === 31 ? 769 : days_to_count_from === 30 ? 748 : 723;\r\n    return `calc(100% + ${full_width - windowWidth}px)`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    prepare_group_data(all_groups, global_year, global_month);\r\n    // eslint-disable-next-line\r\n  }, [all_groups, global_month, global_year]);\r\n\r\n  useEffect(() => {\r\n    if (!global_month) {\r\n      setGroupWidth(windowWidth > 719 ? \"100%\" : \"702px\");\r\n    } else {\r\n      const calculated_width = calculate_width(\r\n        months.find((month) => month.numerical_expression === global_month).days\r\n      );\r\n      setGroupWidth(windowWidth > 719 ? \"100%\" : calculated_width);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [global_month, windowWidth]);\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowWidth(get_window_width());\r\n    }\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"relative divide-y divide-gray-400\"\r\n      style={{\r\n        width: `${groupWidth}`,\r\n      }}\r\n    >\r\n      {filteredGroups &&\r\n        filteredGroups.map(\r\n          (group, i) =>\r\n            group.length !== 0 && (\r\n              <div className={``} key={i}>\r\n                <Group\r\n                  list_of_group_items={group}\r\n                  global_year={global_year}\r\n                  global_month={global_month}\r\n                >\r\n                  <BodySplitter\r\n                    parts_to_split_into={set_splitter_by_global_date(\r\n                      global_year,\r\n                      global_month\r\n                    )}\r\n                  />\r\n                </Group>\r\n              </div>\r\n            )\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","import React, { useState } from \"react\";\r\nimport { months } from \"./CONSTANTS\";\r\n\r\nconst Header = ({\r\n  global_year,\r\n  new_global_year,\r\n  global_month,\r\n  new_global_month,\r\n  possible_years,\r\n}) => {\r\n  const [showYearOptions, setShowYearOptions] = useState(false);\r\n  const MonthDays = () => {\r\n    if (global_month) {\r\n      const days = [];\r\n      const current_month_details = months.find(\r\n        (month) => month.numerical_expression === global_month\r\n      );\r\n      for (let i = 1; i <= current_month_details.days; i++) {\r\n        days.push(\r\n          <div\r\n            className=\"w-full text-xs p-1 flex justify-center items-center\"\r\n            key={i}\r\n          >\r\n            {i}\r\n          </div>\r\n        );\r\n      }\r\n      return days;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex select-none shadow-md z-50 min-w-max bg-white\">\r\n      <div className=\"relative flex w-full border-b border-gray-400\">\r\n        <div\r\n          onClick={() => setShowYearOptions(!showYearOptions)}\r\n          className=\"w-40 flex-shrink-0 transition duration-100 border-gray-200 flex justify-center items-center font-bold cursor-pointer select-none hover:bg-gray-100\"\r\n        >\r\n          {global_year}\r\n          {showYearOptions && (\r\n            <div className=\"absolute divide-y left-0 top-10 z-50 bg-white border shadow w-40\">\r\n              {possible_years.map((year) => (\r\n                <div\r\n                  key={year}\r\n                  onClick={() => {\r\n                    setShowYearOptions(false);\r\n                    new_global_year(year);\r\n                  }}\r\n                  className=\"flex justify-center items-center p-2 hover:bg-gray-50 cursor-pointer w-full\"\r\n                >\r\n                  {year}\r\n                </div>\r\n              ))}\r\n              <div className=\"w-full\"></div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"w-full\">\r\n          <div className=\"flex border-r w-full\">\r\n            {months.map((month) => (\r\n              <div\r\n                key={month.numerical_expression}\r\n                style={{ width: `${(month.days * 100) / 365}%` }}\r\n                className={`transition duration-100 flex justify-center items-center cursor-pointer p-2 border-gray-400 hover:bg-gray-100 ${\r\n                  global_month === month.numerical_expression &&\r\n                  \"hover:bg-none border-l font-bold\"\r\n                } ${\r\n                  month.numerical_expression !== \"12\" &&\r\n                  global_month === month.numerical_expression &&\r\n                  \"border-r\"\r\n                } ${\r\n                  global_month &&\r\n                  global_month !== month.numerical_expression &&\r\n                  \"border-b\"\r\n                }`}\r\n                onClick={() => {\r\n                  if (global_month === month.numerical_expression) {\r\n                    new_global_month(null);\r\n                  } else {\r\n                    new_global_month(month.numerical_expression);\r\n                  }\r\n                }}\r\n              >\r\n                {month.short_name_letters}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"flex border-l border-gray-400\">\r\n            {global_month && <MonthDays />}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Body from './Body';\r\nimport Header from './Header';\r\n\r\nconst Timeline = ({ timeline_data }) => {\r\n    const [globalYear, setGlobalYear] = useState(new Date().getFullYear());\r\n    const [globalMonth, setGlobalMonth] = useState(null);\r\n\r\n    const [possibleYears, setPossibleYears] = useState([]);\r\n\r\n    const [groupOfGroups, setGroupOfGroups] = useState([]);\r\n\r\n    const create_group_of_groups = (raw_data) => {\r\n        const all_groups = find_different_groups(raw_data);\r\n        const group_of_groups = [];\r\n        for (let i in all_groups) {\r\n            const new_group = create_new_group(all_groups[i], raw_data);\r\n            group_of_groups.push(new_group);\r\n        }\r\n        return group_of_groups;\r\n    };\r\n\r\n    const find_different_groups = (array) => {\r\n        const different_group_count = [];\r\n        for (let i in array) {\r\n            if (!different_group_count.includes(array[i].group)) {\r\n                different_group_count.push(array[i].group);\r\n            }\r\n        }\r\n        return different_group_count;\r\n    };\r\n\r\n    const create_new_group = (group_name, data_for_extraction) => {\r\n        const new_group = [];\r\n        for (let j in data_for_extraction) {\r\n            if (group_name === data_for_extraction[j].group) {\r\n                new_group.push(data_for_extraction[j]);\r\n            }\r\n        }\r\n        return new_group;\r\n    };\r\n\r\n    const setup_possible_years = (data_to_pick_from) => {\r\n        const years = [];\r\n        for (let i in data_to_pick_from) {\r\n            const start = Number(\r\n                data_to_pick_from[i].start_date.split('').splice(0, 4).join('')\r\n            );\r\n            const end = Number(\r\n                data_to_pick_from[i].end_date.split('').splice(0, 4).join('')\r\n            );\r\n            if (!years.includes(start)) {\r\n                years.push(start);\r\n            }\r\n            if (!years.includes(end)) {\r\n                years.push(end);\r\n            }\r\n        }\r\n        years.sort((a, b) => (a < b ? 1 : -1));\r\n        return years;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const years = setup_possible_years(timeline_data);\r\n        setPossibleYears(years);\r\n        const group_of_groups = create_group_of_groups(timeline_data);\r\n        setGroupOfGroups(group_of_groups);\r\n        // eslint-disable-next-line\r\n    }, [timeline_data]);\r\n\r\n    return (\r\n        <div\r\n            style={{ height: 'fit-content' }}\r\n            className='text-gray-700 border-gray-400 w-full border overflow-x-auto bg-white'\r\n        >\r\n            <Header\r\n                global_year={globalYear}\r\n                global_month={globalMonth}\r\n                new_global_year={(new_global_year) =>\r\n                    setGlobalYear(new_global_year)\r\n                }\r\n                new_global_month={(new_global_month) =>\r\n                    setGlobalMonth(new_global_month)\r\n                }\r\n                possible_years={possibleYears}\r\n            />\r\n            <Body\r\n                all_groups={groupOfGroups}\r\n                global_year={globalYear}\r\n                global_month={globalMonth}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Timeline;\r\n","import React from 'react';\r\nimport { data_for_testing } from './timeline/CONSTANTS';\r\nimport Timeline from './timeline/Timeline';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className='flex justify-center items-center h-full w-full'>\r\n            <div className='w-3/4'>\r\n                <Timeline timeline_data={data_for_testing} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}