{"version":3,"sources":["timeline/CONSTANTS.js","timeline/BodySplitter.js","timeline/TodaysMarker.js","timeline/Track.js","timeline/Group.js","timeline/Body.js","timeline/Header.js","timeline/Timeline.js","App.js","reportWebVitals.js","index.js"],"names":["months","short_name_letters","numerical_expression","days","track_color_pool","data_for_testing","start_date","end_date","title","group","details","styling","Math","floor","random","length","BodySplitter","partsToSplitInto","globalMonth","Dividers","weekends","setupWeekends","dividers","i","push","style","zIndex","className","includes","month_string","divider_width","find","month","toFixed","width","currentMonth","mnth","currentMonthsDays","allMonthWeekends","Date","getFullYear","getDay","TodaysMarker","todaysDate","globalYear","useState","todaysPosition","setTodaysPosition","useEffect","date","howManyDaysPassed","ceil","Number","getMonth","currentMonthDayCount","partOfTodayByHrs","getHours","marginLeft","Track","trackLengthByIndex","trackStartByIndex","trackStyling","expandTrackInfo","setExpandTrackInfo","height","onClick","Group","listOfGroupItems","children","listOfGroupItemsWithIndexes","setListOfGroupItemsWithIndexes","determineItemRangeByGlobalDate","item","year","itemRangeIndexes","start","end","itemStartDate","itemEndDate","currentYearMonth","itemStartYearMonth","split","splice","join","itemEndYearMonth","endIndex","dateIndexInCurrentYearMonth","correction","mth","startIndex","currentYear","String","itemStartYear","itemEndYear","dateIndexInCurrentYear","currentDateRange","dateToBeIndexed","currentYearDate","dateToBeIndexedDate","currentRangeMonth","currentMonthDays","allData","allDataWithIndexes","itemWithIndexes","start_index","end_index","filterAndSetupForRendering","map","groupItem","itemStart","itemLength","getWindowWidth","window","innerWidth","Body","allGroups","filteredGroups","setFilteredGroups","windowWidth","setWindowWidth","groupWidth","setGroupWidth","filterOutItemsByDateRange","filter","startYearMonth","endYearMonth","globalYearMonth","startYear","endYear","groups","filteredGroupsGroup","groupFilteredByRange","prepareGroupData","calculatedWidth","daysToCountFrom","handleResize","addEventListener","removeEventListener","Header","newGlobalYear","newGlobalMonth","possibleYears","showYearOptions","setShowYearOptions","MonthDays","currentMonthDetails","Timeline","timelineData","setGlobalYear","setGlobalMonth","setPossibleYears","groupOfGroups","setGroupOfGroups","findDifferentGroups","array","differentGroupCount","createNewGroup","groupName","dataForExtraction","newGroup","j","years","dataToPickFrom","sort","a","b","setupPossibleYears","group_of_groups","rawData","groupOfAllGroups","createGroupOfGroups","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAAaA,G,MAAS,CACpB,CAAEC,mBAAoB,OAAQC,qBAAsB,KAAMC,KAAM,IAChE,CAAEF,mBAAoB,OAAQC,qBAAsB,KAAMC,KAAM,IAChE,CAAEF,mBAAoB,OAAQC,qBAAsB,KAAMC,KAAM,IAChE,CAAEF,mBAAoB,OAAQC,qBAAsB,KAAMC,KAAM,IAChE,CAAEF,mBAAoB,MAAOC,qBAAsB,KAAMC,KAAM,IAC/D,CAAEF,mBAAoB,OAAQC,qBAAsB,KAAMC,KAAM,IAChE,CAAEF,mBAAoB,OAAQC,qBAAsB,KAAMC,KAAM,IAChE,CAAEF,mBAAoB,OAAQC,qBAAsB,KAAMC,KAAM,IAChE,CAAEF,mBAAoB,OAAQC,qBAAsB,KAAMC,KAAM,IAChE,CAAEF,mBAAoB,OAAQC,qBAAsB,KAAMC,KAAM,IAChE,CAAEF,mBAAoB,OAAQC,qBAAsB,KAAMC,KAAM,IAChE,CAAEF,mBAAoB,OAAQC,qBAAsB,KAAMC,KAAM,MAGrDC,EAAmB,CAAC,4BAAD,y7BAkCnBC,EAAmB,CAC9B,CACEC,WAAY,aACZC,SAAU,aACVC,MAAO,IACPC,MAAO,UACPC,QAAS,MACTC,QACEP,EAAiBQ,KAAKC,MAAMD,KAAKE,SAAWV,EAAiBW,UAEjE,CACET,WAAY,aACZC,SAAU,aACVC,MAAO,IACPC,MAAO,UACPC,QAAS,MACTC,QACEP,EAAiBQ,KAAKC,MAAMD,KAAKE,SAAWV,EAAiBW,UAEjE,CACET,WAAY,aACZC,SAAU,aACVC,MAAO,IACPC,MAAO,UACPC,QAAS,MACTC,QACEP,EAAiBQ,KAAKC,MAAMD,KAAKE,SAAWV,EAAiBW,UAEjE,CACET,WAAY,aACZC,SAAU,aACVC,MAAO,IACPC,MAAO,UACPC,QAAS,MACTC,QACEP,EAAiBQ,KAAKC,MAAMD,KAAKE,SAAWV,EAAiBW,UAEjE,CACET,WAAY,aACZC,SAAU,aACVC,MAAO,IACPC,MAAO,UACPC,QAAS,MACTC,QACEP,EAAiBQ,KAAKC,MAAMD,KAAKE,SAAWV,EAAiBW,UAEjE,CACET,WAAY,aACZC,SAAU,aACVC,MAAO,IACPC,MAAO,UACPC,QAAS,MACTC,QACEP,EAAiBQ,KAAKC,MAAMD,KAAKE,SAAWV,EAAiBW,UAEjE,CACET,WAAY,aACZC,SAAU,aACVC,MAAO,IACPC,MAAO,UACPC,QAAS,MACTC,QACEP,EAAiBQ,KAAKC,MAAMD,KAAKE,SAAWV,EAAiBW,UAEjE,CACET,WAAY,aACZC,SAAU,aACVC,MAAO,IACPC,MAAO,UACPC,QAAS,MACTC,QACEP,EAAiBQ,KAAKC,MAAMD,KAAKE,SAAWV,EAAiBW,UAEjE,CACET,WAAY,aACZC,SAAU,aACVC,MAAO,IACPC,MAAO,UACPC,QAAS,MACTC,QACEP,EAAiBQ,KAAKC,MAAMD,KAAKE,SAAWV,EAAiBW,UAEjE,CACET,WAAY,aACZC,SAAU,aACVC,MAAO,IACPC,MAAO,UACPC,QAAS,MACTC,QACEP,EAAiBQ,KAAKC,MAAMD,KAAKE,SAAWV,EAAiBW,UAEjE,CACET,WAAY,aACZC,SAAU,aACVC,MAAO,IACPC,MAAO,UACPC,QAAS,MACTC,QACEP,EAAiBQ,KAAKC,MAAMD,KAAKE,SAAWV,EAAiBW,UAEjE,CACET,WAAY,aACZC,SAAU,aACVC,MAAO,IACPC,MAAO,UACPC,QAAS,MACTC,QACEP,EAAiBQ,KAAKC,MAAMD,KAAKE,SAAWV,EAAiBW,UAEjE,CACET,WAAY,aACZC,SAAU,aACVC,MAAO,IACPC,MAAO,UACPC,QAAS,MACTC,QACEP,EAAiBQ,KAAKC,MAAMD,KAAKE,SAAWV,EAAiBW,W,cCpGpDC,EA9DM,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,iBAAkBC,EAAkB,EAAlBA,YAClCC,EAAW,WAGf,IAFA,IAAMC,EAAWC,IACXC,EAAW,GACRC,EAAI,EAAGA,EAAIN,EAAkBM,IACX,KAArBN,EACFK,EAASE,KACP,qBAEEC,MAAO,CAAEC,OAAQ,OACjBC,UAAS,0DACPP,EAASQ,SAASL,GAAK,8BAAgC,KAHpDA,IAOH,WACN,IAAMM,EAAeN,EAAI,EAAJ,WAAYA,EAAI,GAAhB,UAAyBA,EAAI,GAI5CO,GAHgB9B,EAAO+B,MAC3B,SAACC,GAAD,OAAWA,EAAM9B,uBAAyB2B,KAEN1B,KAAO,IAAO,KAAK8B,QAAQ,GACjEX,EAASE,KACP,qBAEEC,MAAO,CAAEC,OAAQ,MAAOQ,MAAM,GAAD,OAAKJ,EAAL,MAC7BH,UAAU,4CAFLJ,IARH,GAeV,OAAOD,GAGHD,EAAgB,WACpB,IAAKH,EAAa,MAAO,GAQzB,IANA,IAAMiB,EAAenC,EAAO+B,MAC1B,SAACK,GAAD,OAAUA,EAAKlC,uBAAyBgB,KAEpCmB,EAAoBF,EAAahC,KACjCmC,EAAmB,GAEhBf,EAAI,EAAGA,EAAIc,EAAmBd,IAAK,CACP,IAAIgB,KAAJ,WAC9B,IAAIA,MAAOC,cADmB,YACFL,EAAajC,qBADX,YAE/BqB,EAAI,IAGuBkB,SAAW,IAAM,GAC9CH,EAAiBd,KAAKD,GAG1B,OAAOe,GAGT,OACE,qBAAKX,UAAU,qBAAf,SACE,cAACR,EAAD,O,OCJSuB,EArDM,SAAC,GAA0D,IAAD,IAAvDC,kBAAuD,MAA1C,IAAIJ,KAAsC,EAA9BrB,EAA8B,EAA9BA,YAAa0B,EAAiB,EAAjBA,WAAiB,EACjCC,qBADiC,mBACtEC,EADsE,KACtDC,EADsD,KAyC7E,OAtCAC,qBAAU,WACR,GAAIJ,IAAeD,EAAWH,eAAiC,OAAhBtB,EAAsB,CACnE,IAAM+B,EAAO,IAAIV,KAAKI,EAAWH,cAAe,EAAG,GAE7CU,EAAoBtC,KAAKuC,MAAMR,EAAaM,GAAQ,OAG1DF,EADwBG,EAAoB,IAAO,UAE9C,GACLN,IAAeD,EAAWH,eACV,OAAhBtB,GACAkC,OAAOlC,KAAiByB,EAAWU,WAAa,EAChD,CACA,IAAMJ,EAAO,IAAIV,KAAKI,EAAWH,cAAeG,EAAWU,WAAY,GAEjEH,EAAoBtC,KAAKuC,MAAMR,EAAaM,GAAQ,OAEpDK,EAAuBtD,EAAO+B,MAClC,SAACK,GAAD,OACEgB,OAAOhB,EAAKlC,wBAA0ByC,EAAWU,WAAa,KAChElD,KAEIoD,EACJZ,EAAWa,YAAc,GAAKb,EAAWa,WAAa,EAClD,EACAb,EAAWa,YAAc,GAAKb,EAAWa,WAAa,GACtD,EACA,EAKNT,EAFGG,EAAoBI,EAAwB,IAAMC,QAIrDR,MAED,CAACJ,EAAYzB,EAAa0B,IAG3B,mCACGE,GACC,qBACErB,MAAO,CAAEgC,WAAW,GAAD,OAAKX,EAAL,MACnBnB,UAAU,6ECZL+B,EAnCD,SAAC,GAOR,IANLC,EAMI,EANJA,mBACAC,EAKI,EALJA,kBACApD,EAII,EAJJA,MACAqD,EAGI,EAHJA,aACAnD,EAEI,EAFJA,QACAuC,EACI,EADJA,KACI,EAC0CJ,oBAAS,GADnD,mBACGiB,EADH,KACoBC,EADpB,KAGJ,OACE,qBAAKpC,UAAU,4BAAf,SACE,qBACEF,MAAO,CACLS,MAAM,GAAD,OAAK4B,EAAkB,IAAMH,EAA7B,KACLF,WAAW,GAAD,OAAKK,EAAkB,EAAIF,EAA3B,KACVI,OAAQ,QAEVC,QAAS,kBAAMF,GAAoBD,IACnCnC,UAAS,sJAAiJkC,GAP5J,SASGC,EACC,sBAAKnC,UAAU,+BAAf,UACE,qBAAKA,UAAU,oBAAf,SAAoCnB,IACpC,qBAAKmB,UAAU,oBAAf,SAAoCsB,IACpC,qBAAKtB,UAAU,oBAAf,SAAoCjB,OAGtC,qBAAKiB,UAAU,2BAAf,SAA2CnB,SC2ItC0D,EApKD,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,iBAAkBvB,EAAwC,EAAxCA,WAAY1B,EAA4B,EAA5BA,YAAakD,EAAe,EAAfA,SAAe,EAIrEvB,qBAJqE,mBAEvEwB,EAFuE,KAGvEC,EAHuE,KAwBnEC,EAAiC,SAACC,EAAMC,EAAMzC,GAClD,IAAM0C,EAAmB,CAAEC,MAAO,UAAWC,IAAK,WAC5CC,EAAgBL,EAAKlE,WACrBwE,EAAcN,EAAKjE,SAEzB,GAAKyB,EAoBE,CACL,IAAM+C,EAAgB,UAAMN,EAAN,YAAczC,GAE9BgD,EAAqBR,EAAKlE,WAC7B2E,MAAM,IACNC,OAAO,EAAG,GACVC,KAAK,IAEFC,EAAmBZ,EAAKjE,SAAS0E,MAAM,IAAIC,OAAO,EAAG,GAAGC,KAAK,IAQnE,GANIH,EAAqBD,IACvBL,EAAiBC,MAAQ,GAEvBS,EAAmBL,IACrBL,EAAiBE,IAAM,GAErBQ,IAAqBL,EAAkB,CACzC,IAAMM,EAAWjC,OACfkC,EAA4BP,EAAkBD,IAGhD,GAAI5D,EAAa,CACf,IAAMqE,EAAanC,QAEf,EACApD,EAAO+B,MAAK,SAACyD,GAAD,OAASA,EAAItF,uBAAyBgB,KAC/Cf,MACH8B,QAAQ,IAEZyC,EAAiBE,KAAOS,EAAWE,GAAYtD,QAAQ,QAEvDyC,EAAiBE,IAAMS,EAG3B,GAAIL,IAAuBD,EAAkB,CAC3C,IAAMU,EAAaH,EACjBP,EACAF,GAEFH,EAAiBC,MAAQc,OA3DjB,CACV,IAAMC,EAAcC,OAAOlB,GAErBmB,EAAgBpB,EAAKlE,WAAW2E,MAAM,IAAIC,OAAO,EAAG,GAAGC,KAAK,IAC5DU,EAAcrB,EAAKjE,SAAS0E,MAAM,IAAIC,OAAO,EAAG,GAAGC,KAAK,IAQ9D,GANIS,EAAgBF,IAClBhB,EAAiBC,MAAQ,GAEvBkB,EAAcH,IAChBhB,EAAiBE,IAAM,GAErBiB,IAAgBH,EAAa,CAC/B,IAAML,EAAWS,EAAuBJ,EAAaZ,GACrDJ,EAAiBE,IAAMS,EAEzB,GAAIO,IAAkBF,EAAa,CACjC,IAAMD,EAAaK,EAAuBJ,EAAab,GACvDH,EAAiBC,MAAQc,GA4C7B,OAAOf,GAGHoB,EAAyB,SAACC,EAAkBC,GAChD,IAAMC,EAAkB,IAAI1D,KAAKwD,GAC3BG,EAAsB,IAAI3D,KAAKyD,GAC/B9C,EAAoBtC,KAAKuC,MAC5B+C,EAAsBD,GAAmB,OAE5C,OAAO7C,QAAQF,EAAoB,KAAKjB,QAAQ,KAG5CqD,EAA8B,SAACS,EAAkBC,GACrD,IAAMC,EAAkB,IAAI1D,KAAKwD,GAG3B7C,GAFsB,IAAIX,KAAKyD,GAGZC,GAAmB,MAEtCE,EAAoBJ,EAAiBd,MAAM,IAAIC,OAAO,EAAG,GAAGC,KAAK,IAEjEiB,EAAmBpG,EAAO+B,MAC9B,SAACC,GAAD,OAAWA,EAAM9B,uBAAyBiG,KAC1ChG,KAEF,OAAOiD,OAAOF,EAAoBkD,GAAkBnE,QAAQ,IAQ9D,OALAe,qBAAU,YAjHyB,SAACqD,EAAS5B,EAAMzC,GACjD,IAAMsE,EAAqB,GAC3B,IAAK,IAAI/E,KAAK8E,EAAS,CACrB,IAAM3B,EAAmBH,EACvB8B,EAAQ9E,GACRkD,EACAzC,GAEIuE,EAAe,2BAChBF,EAAQ9E,IADQ,IAEnBiF,YAAa9B,EAAiBC,MAC9B8B,UAAW/B,EAAiBE,MAE9B0B,EAAmB9E,KAAK+E,GAE1BjC,EAA+BgC,GAmG/BI,CAA2BvC,EAAkBvB,EAAY1B,KAExD,CAACiD,EAAkBvB,EAAY1B,IAGhC,mCACGmD,GACC,sBAAK1C,UAAU,cAAf,UACE,qBAAKA,UAAU,2JAAf,SACG0C,EAA4B,IAC3BA,EAA4B,GAAG5D,QAEnC,sBAAKkB,UAAU,kBAAf,UACE,cAAC,EAAD,CAAcT,YAAaA,EAAa0B,WAAYA,IAEnDyB,EAA4BsC,KAAI,SAACC,EAAWrF,GAC3C,IAAMsF,GAAqC,IAAxBD,EAAUJ,aAAmBvE,QAAQ,GAClD6E,GAEJ,KADCF,EAAUH,UAAYG,EAAUJ,cAEjCvE,QAAQ,GAEV,OACE,cAAC,EAAD,CAEE0B,mBAAoBmD,EACpBlD,kBAAmBiD,EACnBrG,MAAOoG,EAAUpG,MACjBqD,aAAc+C,EAAUjG,QAAUiG,EAAUjG,QAAU,GACtDD,QAASkG,EAAUlG,QACnBuC,KAAI,UAAK2D,EAAUtG,WAAf,cAA+BsG,EAAUrG,WANxCgB,MAUX,qBAAKI,UAAU,2CAAf,SACGyC,aC3JT2C,EAAiB,WAErB,OAD8BC,OAAtBC,YAiIKC,EA7HF,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,UAAWvE,EAA8B,EAA9BA,WAAY1B,EAAkB,EAAlBA,YAAkB,EACX2B,mBAAS,IADE,mBAChDuE,EADgD,KAChCC,EADgC,OAGjBxE,mBAASkE,KAHQ,mBAGhDO,EAHgD,KAGnCC,EAHmC,OAKnB1E,qBALmB,mBAKhD2E,EALgD,KAKpCC,EALoC,KA+BjDC,EAA4B,SAACrB,EAAS5B,EAAMzC,GA0BhD,OAxBKA,EAayBqE,EAAQsB,QAAO,SAACnD,GAC1C,IAAMoD,EAAiBpD,EAAKlE,WAAW2E,MAAM,IAAIC,OAAO,EAAG,GAAGC,KAAK,IAC7D0C,EAAerD,EAAKjE,SAAS0E,MAAM,IAAIC,OAAO,EAAG,GAAGC,KAAK,IACzD2C,EAAe,UAAMrD,EAAN,YAAczC,GACnC,OACE6F,IAAiBC,GACjBF,IAAmBE,GAClBF,EAAiBE,GAAmBD,EAAeC,KAnB5BzB,EAAQsB,QAAO,SAACnD,GAC1C,IAAMuD,EAAY3E,OAChBoB,EAAKlE,WAAW2E,MAAM,IAAIC,OAAO,EAAG,GAAGC,KAAK,KAExC6C,EAAU5E,OAAOoB,EAAKjE,SAAS0E,MAAM,IAAIC,OAAO,EAAG,GAAGC,KAAK,KACjE,OACE6C,IAAYvD,GACZsD,IAActD,GACbsD,EAAYtD,GAAQuD,EAAUvD,MAiDvC,OAzBAzB,qBAAU,YAhDe,SAACiF,EAAQxD,EAAMzC,GACtC,IAAMkG,EAAsB,GAC5B,IAAK,IAAI3G,KAAK0G,EAAQ,CACpB,IAAME,EAAuBT,EAC3BO,EAAO1G,GACPkD,EACAzC,GAEFkG,EAAoB1G,KAAK2G,GAE3Bd,EAAkBa,GAuClBE,CAAiBjB,EAAWvE,EAAY1B,KAEvC,CAACiG,EAAWjG,EAAa0B,IAE5BI,qBAAU,WACR,GAAK9B,EAEE,CACL,IAAMmH,GAfcC,EAgBlBtI,EAAO+B,MAAK,SAACC,GAAD,OAAWA,EAAM9B,uBAAyBgB,KAAaf,KAbjE,eAAN,QADsB,KAApBmI,EAAyB,IAA0B,KAApBA,EAAyB,IAAM,KAC9BhB,EAAlC,QAeEG,EAAcH,EAAc,IAAM,OAASe,QAL3CZ,EAAcH,EAAc,IAAM,OAAS,SAbxB,IAACgB,IAqBrB,CAACpH,EAAaoG,IAEjBtE,qBAAU,WACR,SAASuF,IACPhB,EAAeR,KAGjB,OADAC,OAAOwB,iBAAiB,SAAUD,GAC3B,kBAAMvB,OAAOyB,oBAAoB,SAAUF,MACjD,IAGD,qBAAK5G,UAAU,WAAf,SACE,qBACEA,UAAU,oCACVF,MAAO,CACLS,MAAM,GAAD,OAAKsF,IAHd,SAMGJ,GACCA,EAAeT,KACb,SAAClG,EAAOc,GAAR,OACmB,IAAjBd,EAAMM,QACJ,8BACE,cAAC,EAAD,CACEoD,iBAAkB1D,EAClBmC,WAAYA,EACZ1B,YAAaA,EAHf,SAKE,cAAC,EAAD,CACED,kBAvGmBe,EAyGjBd,EAxGfc,EAG4BhC,EAAO+B,MACpC,SAACK,GAAD,OAAUA,EAAKlC,uBAAyB8B,KAEZ7B,KALvB,IAyGSe,YAAaA,OAXTK,GAhGQ,IAAOS,UC+E1B0G,EA7FA,SAAC,GAMT,IALL9F,EAKI,EALJA,WACA+F,EAII,EAJJA,cACAzH,EAGI,EAHJA,YACA0H,EAEI,EAFJA,eACAC,EACI,EADJA,cACI,EAC0ChG,oBAAS,GADnD,mBACGiG,EADH,KACoBC,EADpB,KAEEC,EAAY,WAChB,GAAI9H,EAAa,CAKf,IAJA,IAAMf,EAAO,GACP8I,EAAsBjJ,EAAO+B,MACjC,SAACC,GAAD,OAAWA,EAAM9B,uBAAyBgB,KAEnCK,EAAI,EAAGA,GAAK0H,EAAoB9I,KAAMoB,IAC7CpB,EAAKqB,KACH,qBACEG,UAAU,sDADZ,SAIGJ,GAFIA,IAMX,OAAOpB,IAIX,OACE,qBAAKwB,UAAU,qDAAf,SACE,sBAAKA,UAAU,gDAAf,UACE,sBACEsC,QAAS,kBAAM8E,GAAoBD,IACnCnH,UAAU,qJAFZ,UAIGiB,EACAkG,GACC,sBAAKnH,UAAU,mEAAf,UACGkH,EAAclC,KAAI,SAAClC,GAAD,OACjB,qBAEER,QAAS,WACP8E,GAAmB,GACnBJ,EAAclE,IAEhB9C,UAAU,8EANZ,SAQG8C,GAPIA,MAUT,qBAAK9C,UAAU,iBAIrB,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,uBAAf,SACG3B,EAAO2G,KAAI,SAAC3E,GAAD,OACV,qBAEEP,MAAO,CAAES,MAAM,GAAD,OAAmB,IAAbF,EAAM7B,KAAc,IAA1B,MACdwB,UAAS,wHACPT,IAAgBc,EAAM9B,sBACtB,mCAFO,YAIwB,OAA/B8B,EAAM9B,sBACNgB,IAAgBc,EAAM9B,sBACtB,WANO,YAQPgB,GACAA,IAAgBc,EAAM9B,sBACtB,YAEF+D,QAAS,WACH/C,IAAgBc,EAAM9B,qBACxB0I,EAAe,MAEfA,EAAe5G,EAAM9B,uBAnB3B,SAuBG8B,EAAM/B,oBAtBF+B,EAAM9B,2BA0BjB,qBAAKyB,UAAU,gCAAf,SACGT,GAAe,cAAC8H,EAAD,eCGbE,EAvFE,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAAmB,EACDtG,oBAAS,IAAIN,MAAOC,eADnB,mBAC9BI,EAD8B,KAClBwG,EADkB,OAECvG,mBAAS,MAFV,mBAE9B3B,EAF8B,KAEjBmI,EAFiB,OAIKxG,mBAAS,IAJd,mBAI9BgG,EAJ8B,KAIfS,EAJe,OAMKzG,mBAAS,IANd,mBAM9B0G,EAN8B,KAMfC,EANe,KAkB/BC,EAAsB,SAACC,GAC3B,IAAMC,EAAsB,GAC5B,IAAK,IAAIpI,KAAKmI,EACPC,EAAoB/H,SAAS8H,EAAMnI,GAAGd,QACzCkJ,EAAoBnI,KAAKkI,EAAMnI,GAAGd,OAGtC,OAAOkJ,GAGHC,EAAiB,SAACC,EAAWC,GACjC,IAAMC,EAAW,GACjB,IAAK,IAAIC,KAAKF,EACRD,IAAcC,EAAkBE,GAAGvJ,OACrCsJ,EAASvI,KAAKsI,EAAkBE,IAGpC,OAAOD,GA+BT,OARA/G,qBAAU,WACR,IAAMiH,EArBmB,SAACC,GAC1B,IAAMD,EAAQ,GACd,IAAK,IAAI1I,KAAK2I,EAAgB,CAC5B,IAAMvF,EAAQvB,OACZ8G,EAAe3I,GAAGjB,WAAW2E,MAAM,IAAIC,OAAO,EAAG,GAAGC,KAAK,KAErDP,EAAMxB,OACV8G,EAAe3I,GAAGhB,SAAS0E,MAAM,IAAIC,OAAO,EAAG,GAAGC,KAAK,KAEpD8E,EAAMrI,SAAS+C,IAClBsF,EAAMzI,KAAKmD,GAERsF,EAAMrI,SAASgD,IAClBqF,EAAMzI,KAAKoD,GAIf,OADAqF,EAAME,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAIC,EAAI,GAAK,KAC5BJ,EAIOK,CAAmBnB,GACjCG,EAAiBW,GACjB,IAAMM,EArDoB,SAACC,GAC3B,IAAMrD,EAAYsC,EAAoBe,GAChCC,EAAmB,GACzB,IAAK,IAAIlJ,KAAK4F,EAAW,CACvB,IAAM4C,EAAWH,EAAezC,EAAU5F,GAAIiJ,GAC9CC,EAAiBjJ,KAAKuI,GAExB,OAAOU,EA8CiBC,CAAoBvB,GAC5CK,EAAiBe,KAEhB,CAACpB,IAGF,sBACE1H,MAAO,CAAEuC,OAAQ,eACjBrC,UAAU,mFAFZ,UAIE,cAAC,EAAD,CACEiB,WAAYA,EACZ1B,YAAaA,EACbyH,cAAe,SAACA,GAAD,OAAmBS,EAAcT,IAChDC,eAAgB,SAACA,GAAD,OAAoBS,EAAeT,IACnDC,cAAeA,IAEjB,cAAC,EAAD,CACE1B,UAAWoC,EACX3G,WAAYA,EACZ1B,YAAaA,QCvENyJ,MAVf,WACE,OACE,qBAAKhJ,UAAU,iDAAf,SACE,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CAAUwH,aAAc9I,SCIjBuK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c536b5fa.chunk.js","sourcesContent":["export const months = [\r\n  { short_name_letters: \"Jan.\", numerical_expression: \"01\", days: 31 },\r\n  { short_name_letters: \"Feb.\", numerical_expression: \"02\", days: 28 },\r\n  { short_name_letters: \"Mar.\", numerical_expression: \"03\", days: 31 },\r\n  { short_name_letters: \"Apr.\", numerical_expression: \"04\", days: 30 },\r\n  { short_name_letters: \"May\", numerical_expression: \"05\", days: 31 },\r\n  { short_name_letters: \"Jun.\", numerical_expression: \"06\", days: 30 },\r\n  { short_name_letters: \"Jul.\", numerical_expression: \"07\", days: 31 },\r\n  { short_name_letters: \"Aug.\", numerical_expression: \"08\", days: 31 },\r\n  { short_name_letters: \"Sep.\", numerical_expression: \"09\", days: 30 },\r\n  { short_name_letters: \"Oct.\", numerical_expression: \"10\", days: 31 },\r\n  { short_name_letters: \"Nov.\", numerical_expression: \"11\", days: 30 },\r\n  { short_name_letters: \"Dec.\", numerical_expression: \"12\", days: 31 },\r\n];\r\n\r\nexport const track_color_pool = [\r\n  `bg-red-100 border-red-700`,\r\n  `bg-red-200 border-red-700`,\r\n  `bg-red-300 border-red-700`,\r\n  `bg-blue-100 border-blue-700`,\r\n  `bg-blue-200 border-blue-700`,\r\n  `bg-blue-300 border-blue-700`,\r\n  `bg-blue-400 border-blue-700`,\r\n  `bg-green-100 border-green-700`,\r\n  `bg-green-200 border-green-700`,\r\n  `bg-green-300 border-green-700`,\r\n  `bg-green-400 border-green-700`,\r\n  `bg-yellow-100 border-yellow-700`,\r\n  `bg-yellow-200 border-yellow-700`,\r\n  `bg-yellow-300 border-yellow-700`,\r\n  `bg-yellow-400 border-yellow-700`,\r\n  `bg-pink-100 border-pink-700`,\r\n  `bg-pink-200 border-pink-700`,\r\n  `bg-pink-300 border-pink-700`,\r\n  `bg-pink-400 border-pink-700`,\r\n  `bg-gray-100 border-gray-700`,\r\n  `bg-gray-200 border-gray-700`,\r\n  `bg-gray-300 border-gray-700`,\r\n  `bg-gray-400 border-gray-700`,\r\n  `bg-indigo-100 border-indigo-700`,\r\n  `bg-indigo-200 border-indigo-700`,\r\n  `bg-indigo-300 border-indigo-700`,\r\n  `bg-indigo-400 border-indigo-700`,\r\n  `bg-purple-100 border-purple-700`,\r\n  `bg-purple-200 border-purple-700`,\r\n  `bg-purple-300 border-purple-700`,\r\n  `bg-purple-400 border-purple-700`,\r\n];\r\n\r\nexport const data_for_testing = [\r\n  {\r\n    start_date: \"2021.03.11\",\r\n    end_date: \"2021.09.17\",\r\n    title: \"a\",\r\n    group: \"group a\",\r\n    details: \"aaa\",\r\n    styling:\r\n      track_color_pool[Math.floor(Math.random() * track_color_pool.length)],\r\n  },\r\n  {\r\n    start_date: \"2020.03.11\",\r\n    end_date: \"2021.02.17\",\r\n    title: \"b\",\r\n    group: \"group a\",\r\n    details: \"bbb\",\r\n    styling:\r\n      track_color_pool[Math.floor(Math.random() * track_color_pool.length)],\r\n  },\r\n  {\r\n    start_date: \"2021.03.02\",\r\n    end_date: \"2021.03.26\",\r\n    title: \"e\",\r\n    group: \"group a\",\r\n    details: \"eee\",\r\n    styling:\r\n      track_color_pool[Math.floor(Math.random() * track_color_pool.length)],\r\n  },\r\n  {\r\n    start_date: \"2021.05.18\",\r\n    end_date: \"2021.06.10\",\r\n    title: \"z\",\r\n    group: \"group a\",\r\n    details: \"zzz\",\r\n    styling:\r\n      track_color_pool[Math.floor(Math.random() * track_color_pool.length)],\r\n  },\r\n  {\r\n    start_date: \"2021.06.11\",\r\n    end_date: \"2022.01.17\",\r\n    title: \"c\",\r\n    group: \"group a\",\r\n    details: \"ccc\",\r\n    styling:\r\n      track_color_pool[Math.floor(Math.random() * track_color_pool.length)],\r\n  },\r\n  {\r\n    start_date: \"2021.02.11\",\r\n    end_date: \"2021.03.17\",\r\n    title: \"a\",\r\n    group: \"group b\",\r\n    details: \"aaa\",\r\n    styling:\r\n      track_color_pool[Math.floor(Math.random() * track_color_pool.length)],\r\n  },\r\n  {\r\n    start_date: \"2021.03.11\",\r\n    end_date: \"2021.07.17\",\r\n    title: \"b\",\r\n    group: \"group b\",\r\n    details: \"bbb\",\r\n    styling:\r\n      track_color_pool[Math.floor(Math.random() * track_color_pool.length)],\r\n  },\r\n  {\r\n    start_date: \"2021.02.11\",\r\n    end_date: \"2022.03.17\",\r\n    title: \"c\",\r\n    group: \"group b\",\r\n    details: \"ccc\",\r\n    styling:\r\n      track_color_pool[Math.floor(Math.random() * track_color_pool.length)],\r\n  },\r\n  {\r\n    start_date: \"2020.02.11\",\r\n    end_date: \"2020.08.17\",\r\n    title: \"a\",\r\n    group: \"group c\",\r\n    details: \"aaa\",\r\n    styling:\r\n      track_color_pool[Math.floor(Math.random() * track_color_pool.length)],\r\n  },\r\n  {\r\n    start_date: \"2020.08.11\",\r\n    end_date: \"2022.01.17\",\r\n    title: \"b\",\r\n    group: \"group c\",\r\n    details: \"bbb\",\r\n    styling:\r\n      track_color_pool[Math.floor(Math.random() * track_color_pool.length)],\r\n  },\r\n  {\r\n    start_date: \"2020.10.11\",\r\n    end_date: \"2021.04.17\",\r\n    title: \"c\",\r\n    group: \"group c\",\r\n    details: \"ccc\",\r\n    styling:\r\n      track_color_pool[Math.floor(Math.random() * track_color_pool.length)],\r\n  },\r\n  {\r\n    start_date: \"2020.01.11\",\r\n    end_date: \"2022.12.17\",\r\n    title: \"d\",\r\n    group: \"group b\",\r\n    details: \"ddd\",\r\n    styling:\r\n      track_color_pool[Math.floor(Math.random() * track_color_pool.length)],\r\n  },\r\n  {\r\n    start_date: \"2021.01.11\",\r\n    end_date: \"2021.01.19\",\r\n    title: \"e\",\r\n    group: \"group b\",\r\n    details: \"eee\",\r\n    styling:\r\n      track_color_pool[Math.floor(Math.random() * track_color_pool.length)],\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { months } from \"./CONSTANTS\";\r\n\r\nconst BodySplitter = ({ partsToSplitInto, globalMonth }) => {\r\n  const Dividers = () => {\r\n    const weekends = setupWeekends();\r\n    const dividers = [];\r\n    for (let i = 0; i < partsToSplitInto; i++) {\r\n      if (partsToSplitInto !== 12) {\r\n        dividers.push(\r\n          <div\r\n            key={i}\r\n            style={{ zIndex: \"-10\" }}\r\n            className={`w-full h-full border-r border-l border-gray-100 ${\r\n              weekends.includes(i) ? \"bg-gray-100 border-gray-200\" : \"\"\r\n            }`}\r\n          />\r\n        );\r\n      } else {\r\n        const month_string = i < 9 ? `0${i + 1}` : `${i + 1}`;\r\n        const current_month = months.find(\r\n          (month) => month.numerical_expression === month_string\r\n        );\r\n        const divider_width = ((current_month.days / 365) * 100).toFixed(3);\r\n        dividers.push(\r\n          <div\r\n            key={i}\r\n            style={{ zIndex: \"-10\", width: `${divider_width}%` }}\r\n            className=\"h-full border-r border-l border-gray-200\"\r\n          />\r\n        );\r\n      }\r\n    }\r\n    return dividers;\r\n  };\r\n\r\n  const setupWeekends = () => {\r\n    if (!globalMonth) return [];\r\n\r\n    const currentMonth = months.find(\r\n      (mnth) => mnth.numerical_expression === globalMonth\r\n    );\r\n    const currentMonthsDays = currentMonth.days;\r\n    const allMonthWeekends = [];\r\n\r\n    for (let i = 0; i < currentMonthsDays; i++) {\r\n      const dateObjectOfFirstMonthsDay = new Date(\r\n        `${new Date().getFullYear()}.${currentMonth.numerical_expression}.${\r\n          i + 1\r\n        }`\r\n      );\r\n      if (dateObjectOfFirstMonthsDay.getDay() % 6 === 0) {\r\n        allMonthWeekends.push(i);\r\n      }\r\n    }\r\n    return allMonthWeekends;\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full h-full flex\">\r\n      <Dividers />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BodySplitter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { months } from \"./CONSTANTS\";\r\n\r\nconst TodaysMarker = ({ todaysDate = new Date(), globalMonth, globalYear }) => {\r\n  const [todaysPosition, setTodaysPosition] = useState();\r\n\r\n  useEffect(() => {\r\n    if (globalYear === todaysDate.getFullYear() && globalMonth === null) {\r\n      const date = new Date(todaysDate.getFullYear(), 0, 1);\r\n\r\n      const howManyDaysPassed = Math.ceil((todaysDate - date) / 8.64e7);\r\n\r\n      const markerPosition = (howManyDaysPassed / 365) * 100;\r\n      setTodaysPosition(markerPosition);\r\n    } else if (\r\n      globalYear === todaysDate.getFullYear() &&\r\n      globalMonth !== null &&\r\n      Number(globalMonth) === todaysDate.getMonth() + 1\r\n    ) {\r\n      const date = new Date(todaysDate.getFullYear(), todaysDate.getMonth(), 1);\r\n\r\n      const howManyDaysPassed = Math.ceil((todaysDate - date) / 8.64e7);\r\n\r\n      const currentMonthDayCount = months.find(\r\n        (mnth) =>\r\n          Number(mnth.numerical_expression) === todaysDate.getMonth() + 1\r\n      ).days;\r\n\r\n      const partOfTodayByHrs =\r\n        todaysDate.getHours() >= 1 && todaysDate.getHours() < 8\r\n          ? 3\r\n          : todaysDate.getHours() >= 8 && todaysDate.getHours() < 16\r\n          ? 2\r\n          : 1;\r\n\r\n      const markerPosition =\r\n        (howManyDaysPassed / currentMonthDayCount) * 100 - partOfTodayByHrs;\r\n\r\n      setTodaysPosition(markerPosition);\r\n    } else {\r\n      setTodaysPosition();\r\n    }\r\n  }, [todaysDate, globalMonth, globalYear]);\r\n\r\n  return (\r\n    <>\r\n      {todaysPosition && (\r\n        <div\r\n          style={{ marginLeft: `${todaysPosition}%` }}\r\n          className=\"h-full w-1 absolute top-0 bg-red-600 z-50 transition-all duration-500\"\r\n        ></div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodaysMarker;\r\n","import React, { useState } from \"react\";\r\n\r\nconst Track = ({\r\n  trackLengthByIndex,\r\n  trackStartByIndex,\r\n  title,\r\n  trackStyling,\r\n  details,\r\n  date,\r\n}) => {\r\n  const [expandTrackInfo, setExpandTrackInfo] = useState(false);\r\n\r\n  return (\r\n    <div className=\"relative z-50 select-none\">\r\n      <div\r\n        style={{\r\n          width: `${expandTrackInfo ? 100 : trackLengthByIndex}%`,\r\n          marginLeft: `${expandTrackInfo ? 0 : trackStartByIndex}%`,\r\n          height: \"auto\",\r\n        }}\r\n        onClick={() => setExpandTrackInfo(!expandTrackInfo)}\r\n        className={`flex justify-center cursor-pointer overflow-x-hidden transition-all duration-500 items-center font-bold text-gray-800 my-2 rounded border-2 ${trackStyling}`}\r\n      >\r\n        {expandTrackInfo ? (\r\n          <div className=\"flex-col text-sm text-center\">\r\n            <div className=\"whitespace-nowrap\">{title}</div>\r\n            <div className=\"whitespace-nowrap\">{date}</div>\r\n            <div className=\"whitespace-nowrap\">{details}</div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"overflow-hidden truncate\">{title}</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Track;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { months } from \"./CONSTANTS\";\r\nimport TodaysMarker from \"./TodaysMarker\";\r\nimport Track from \"./Track\";\r\n\r\nconst Group = ({ listOfGroupItems, globalYear, globalMonth, children }) => {\r\n  const [\r\n    listOfGroupItemsWithIndexes,\r\n    setListOfGroupItemsWithIndexes,\r\n  ] = useState();\r\n\r\n  const filterAndSetupForRendering = (allData, year, month) => {\r\n    const allDataWithIndexes = [];\r\n    for (let i in allData) {\r\n      const itemRangeIndexes = determineItemRangeByGlobalDate(\r\n        allData[i],\r\n        year,\r\n        month\r\n      );\r\n      const itemWithIndexes = {\r\n        ...allData[i],\r\n        start_index: itemRangeIndexes.start,\r\n        end_index: itemRangeIndexes.end,\r\n      };\r\n      allDataWithIndexes.push(itemWithIndexes);\r\n    }\r\n    setListOfGroupItemsWithIndexes(allDataWithIndexes);\r\n  };\r\n\r\n  const determineItemRangeByGlobalDate = (item, year, month) => {\r\n    const itemRangeIndexes = { start: \"not_set\", end: \"not_set\" };\r\n    const itemStartDate = item.start_date;\r\n    const itemEndDate = item.end_date;\r\n\r\n    if (!month) {\r\n      const currentYear = String(year);\r\n\r\n      const itemStartYear = item.start_date.split(\"\").splice(0, 4).join(\"\");\r\n      const itemEndYear = item.end_date.split(\"\").splice(0, 4).join(\"\");\r\n\r\n      if (itemStartYear < currentYear) {\r\n        itemRangeIndexes.start = 0;\r\n      }\r\n      if (itemEndYear > currentYear) {\r\n        itemRangeIndexes.end = 1;\r\n      }\r\n      if (itemEndYear === currentYear) {\r\n        const endIndex = dateIndexInCurrentYear(currentYear, itemEndDate);\r\n        itemRangeIndexes.end = endIndex;\r\n      }\r\n      if (itemStartYear === currentYear) {\r\n        const startIndex = dateIndexInCurrentYear(currentYear, itemStartDate);\r\n        itemRangeIndexes.start = startIndex;\r\n      }\r\n    } else {\r\n      const currentYearMonth = `${year}.${month}`;\r\n\r\n      const itemStartYearMonth = item.start_date\r\n        .split(\"\")\r\n        .splice(0, 7)\r\n        .join(\"\");\r\n\r\n      const itemEndYearMonth = item.end_date.split(\"\").splice(0, 7).join(\"\");\r\n\r\n      if (itemStartYearMonth < currentYearMonth) {\r\n        itemRangeIndexes.start = 0;\r\n      }\r\n      if (itemEndYearMonth > currentYearMonth) {\r\n        itemRangeIndexes.end = 1;\r\n      }\r\n      if (itemEndYearMonth === currentYearMonth) {\r\n        const endIndex = Number(\r\n          dateIndexInCurrentYearMonth(currentYearMonth, itemEndDate)\r\n        );\r\n\r\n        if (globalMonth) {\r\n          const correction = Number(\r\n            (\r\n              1 /\r\n              months.find((mth) => mth.numerical_expression === globalMonth)\r\n                .days\r\n            ).toFixed(2)\r\n          );\r\n          itemRangeIndexes.end = (endIndex + correction).toFixed(2);\r\n        } else {\r\n          itemRangeIndexes.end = endIndex;\r\n        }\r\n      }\r\n      if (itemStartYearMonth === currentYearMonth) {\r\n        const startIndex = dateIndexInCurrentYearMonth(\r\n          currentYearMonth,\r\n          itemStartDate\r\n        );\r\n        itemRangeIndexes.start = startIndex;\r\n      }\r\n    }\r\n    return itemRangeIndexes;\r\n  };\r\n\r\n  const dateIndexInCurrentYear = (currentDateRange, dateToBeIndexed) => {\r\n    const currentYearDate = new Date(currentDateRange);\r\n    const dateToBeIndexedDate = new Date(dateToBeIndexed);\r\n    const howManyDaysPassed = Math.ceil(\r\n      (dateToBeIndexedDate - currentYearDate) / 86400000\r\n    );\r\n    return Number((howManyDaysPassed / 365).toFixed(2));\r\n  };\r\n\r\n  const dateIndexInCurrentYearMonth = (currentDateRange, dateToBeIndexed) => {\r\n    const currentYearDate = new Date(currentDateRange);\r\n    const dateToBeIndexedDate = new Date(dateToBeIndexed);\r\n\r\n    const howManyDaysPassed =\r\n      (dateToBeIndexedDate - currentYearDate) / 86400000;\r\n\r\n    const currentRangeMonth = currentDateRange.split(\"\").splice(5, 2).join(\"\");\r\n\r\n    const currentMonthDays = months.find(\r\n      (month) => month.numerical_expression === currentRangeMonth\r\n    ).days;\r\n\r\n    return Number(howManyDaysPassed / currentMonthDays).toFixed(2);\r\n  };\r\n\r\n  useEffect(() => {\r\n    filterAndSetupForRendering(listOfGroupItems, globalYear, globalMonth);\r\n    // eslint-disable-next-line\r\n  }, [listOfGroupItems, globalYear, globalMonth]);\r\n\r\n  return (\r\n    <>\r\n      {listOfGroupItemsWithIndexes && (\r\n        <div className=\"flex w-full\">\r\n          <div className=\"flex items-center justify-center text-center w-40 p-2 text-sm border-r border-gray-300 flex-shrink-0 bg-white shadow-r uppercase font-bold text-gray-600\">\r\n            {listOfGroupItemsWithIndexes[0] &&\r\n              listOfGroupItemsWithIndexes[0].group}\r\n          </div>\r\n          <div className=\"w-full relative\">\r\n            <TodaysMarker globalMonth={globalMonth} globalYear={globalYear} />\r\n\r\n            {listOfGroupItemsWithIndexes.map((groupItem, i) => {\r\n              const itemStart = (groupItem.start_index * 100).toFixed(0);\r\n              const itemLength = (\r\n                (groupItem.end_index - groupItem.start_index) *\r\n                100\r\n              ).toFixed(0);\r\n\r\n              return (\r\n                <Track\r\n                  key={i}\r\n                  trackLengthByIndex={itemLength}\r\n                  trackStartByIndex={itemStart}\r\n                  title={groupItem.title}\r\n                  trackStyling={groupItem.styling ? groupItem.styling : \"\"}\r\n                  details={groupItem.details}\r\n                  date={`${groupItem.start_date} - ${groupItem.end_date}`}\r\n                />\r\n              );\r\n            })}\r\n            <div className=\"absolute z-30 top-0 left-0 w-full h-full\">\r\n              {children}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Group;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport BodySplitter from \"./BodySplitter\";\r\nimport Group from \"./Group\";\r\nimport { months } from \"./CONSTANTS\";\r\n\r\nconst getWindowWidth = () => {\r\n  const { innerWidth: width } = window;\r\n  return width;\r\n};\r\n\r\nconst Body = ({ allGroups, globalYear, globalMonth }) => {\r\n  const [filteredGroups, setFilteredGroups] = useState([]);\r\n\r\n  const [windowWidth, setWindowWidth] = useState(getWindowWidth());\r\n\r\n  const [groupWidth, setGroupWidth] = useState();\r\n\r\n  const setSplitterByGlobalDate = (year, month) => {\r\n    if (!month) {\r\n      return 12;\r\n    } else {\r\n      const currentMonthProperties = months.find(\r\n        (mnth) => mnth.numerical_expression === month\r\n      );\r\n      return currentMonthProperties.days;\r\n    }\r\n  };\r\n\r\n  const prepareGroupData = (groups, year, month) => {\r\n    const filteredGroupsGroup = [];\r\n    for (let i in groups) {\r\n      const groupFilteredByRange = filterOutItemsByDateRange(\r\n        groups[i],\r\n        year,\r\n        month\r\n      );\r\n      filteredGroupsGroup.push(groupFilteredByRange);\r\n    }\r\n    setFilteredGroups(filteredGroupsGroup);\r\n  };\r\n\r\n  const filterOutItemsByDateRange = (allData, year, month) => {\r\n    let startToEndIncludesCurrent;\r\n    if (!month) {\r\n      startToEndIncludesCurrent = allData.filter((item) => {\r\n        const startYear = Number(\r\n          item.start_date.split(\"\").splice(0, 4).join(\"\")\r\n        );\r\n        const endYear = Number(item.end_date.split(\"\").splice(0, 4).join(\"\"));\r\n        return (\r\n          endYear === year ||\r\n          startYear === year ||\r\n          (startYear < year && endYear > year)\r\n        );\r\n      });\r\n    } else {\r\n      startToEndIncludesCurrent = allData.filter((item) => {\r\n        const startYearMonth = item.start_date.split(\"\").splice(0, 7).join(\"\");\r\n        const endYearMonth = item.end_date.split(\"\").splice(0, 7).join(\"\");\r\n        const globalYearMonth = `${year}.${month}`;\r\n        return (\r\n          endYearMonth === globalYearMonth ||\r\n          startYearMonth === globalYearMonth ||\r\n          (startYearMonth < globalYearMonth && endYearMonth > globalYearMonth)\r\n        );\r\n      });\r\n    }\r\n    return startToEndIncludesCurrent;\r\n  };\r\n\r\n  const calculateWidth = (daysToCountFrom) => {\r\n    const fullWidth =\r\n      daysToCountFrom === 31 ? 769 : daysToCountFrom === 30 ? 748 : 723;\r\n    return `calc(100% + ${fullWidth - windowWidth}px)`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    prepareGroupData(allGroups, globalYear, globalMonth);\r\n    // eslint-disable-next-line\r\n  }, [allGroups, globalMonth, globalYear]);\r\n\r\n  useEffect(() => {\r\n    if (!globalMonth) {\r\n      setGroupWidth(windowWidth > 719 ? \"100%\" : \"702px\");\r\n    } else {\r\n      const calculatedWidth = calculateWidth(\r\n        months.find((month) => month.numerical_expression === globalMonth).days\r\n      );\r\n      setGroupWidth(windowWidth > 719 ? \"100%\" : calculatedWidth);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [globalMonth, windowWidth]);\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowWidth(getWindowWidth());\r\n    }\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <div\r\n        className=\"relative divide-y divide-gray-400\"\r\n        style={{\r\n          width: `${groupWidth}`,\r\n        }}\r\n      >\r\n        {filteredGroups &&\r\n          filteredGroups.map(\r\n            (group, i) =>\r\n              group.length !== 0 && (\r\n                <div key={i}>\r\n                  <Group\r\n                    listOfGroupItems={group}\r\n                    globalYear={globalYear}\r\n                    globalMonth={globalMonth}\r\n                  >\r\n                    <BodySplitter\r\n                      partsToSplitInto={setSplitterByGlobalDate(\r\n                        globalYear,\r\n                        globalMonth\r\n                      )}\r\n                      globalMonth={globalMonth}\r\n                    />\r\n                  </Group>\r\n                </div>\r\n              )\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","import React, { useState } from \"react\";\r\nimport { months } from \"./CONSTANTS\";\r\n\r\nconst Header = ({\r\n  globalYear,\r\n  newGlobalYear,\r\n  globalMonth,\r\n  newGlobalMonth,\r\n  possibleYears,\r\n}) => {\r\n  const [showYearOptions, setShowYearOptions] = useState(false);\r\n  const MonthDays = () => {\r\n    if (globalMonth) {\r\n      const days = [];\r\n      const currentMonthDetails = months.find(\r\n        (month) => month.numerical_expression === globalMonth\r\n      );\r\n      for (let i = 1; i <= currentMonthDetails.days; i++) {\r\n        days.push(\r\n          <div\r\n            className=\"w-full text-xs p-1 flex justify-center items-center\"\r\n            key={i}\r\n          >\r\n            {i}\r\n          </div>\r\n        );\r\n      }\r\n      return days;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex select-none shadow-md z-50 min-w-max bg-white\">\r\n      <div className=\"relative flex w-full border-b border-gray-400\">\r\n        <div\r\n          onClick={() => setShowYearOptions(!showYearOptions)}\r\n          className=\"w-40 flex-shrink-0 transition duration-100 border-gray-200 flex justify-center items-center font-bold cursor-pointer select-none hover:bg-gray-100\"\r\n        >\r\n          {globalYear}\r\n          {showYearOptions && (\r\n            <div className=\"absolute divide-y left-0 top-10 z-50 bg-white border shadow w-40\">\r\n              {possibleYears.map((year) => (\r\n                <div\r\n                  key={year}\r\n                  onClick={() => {\r\n                    setShowYearOptions(false);\r\n                    newGlobalYear(year);\r\n                  }}\r\n                  className=\"flex justify-center items-center p-2 hover:bg-gray-50 cursor-pointer w-full\"\r\n                >\r\n                  {year}\r\n                </div>\r\n              ))}\r\n              <div className=\"w-full\"></div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"w-full\">\r\n          <div className=\"flex border-r w-full\">\r\n            {months.map((month) => (\r\n              <div\r\n                key={month.numerical_expression}\r\n                style={{ width: `${(month.days * 100) / 365}%` }}\r\n                className={`transition duration-100 flex justify-center items-center cursor-pointer p-2 border-gray-400 hover:bg-gray-100 ${\r\n                  globalMonth === month.numerical_expression &&\r\n                  \"hover:bg-none border-l font-bold\"\r\n                } ${\r\n                  month.numerical_expression !== \"12\" &&\r\n                  globalMonth === month.numerical_expression &&\r\n                  \"border-r\"\r\n                } ${\r\n                  globalMonth &&\r\n                  globalMonth !== month.numerical_expression &&\r\n                  \"border-b\"\r\n                }`}\r\n                onClick={() => {\r\n                  if (globalMonth === month.numerical_expression) {\r\n                    newGlobalMonth(null);\r\n                  } else {\r\n                    newGlobalMonth(month.numerical_expression);\r\n                  }\r\n                }}\r\n              >\r\n                {month.short_name_letters}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"flex border-l border-gray-400\">\r\n            {globalMonth && <MonthDays />}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Body from \"./Body\";\r\nimport Header from \"./Header\";\r\n\r\nconst Timeline = ({ timelineData }) => {\r\n  const [globalYear, setGlobalYear] = useState(new Date().getFullYear());\r\n  const [globalMonth, setGlobalMonth] = useState(null);\r\n\r\n  const [possibleYears, setPossibleYears] = useState([]);\r\n\r\n  const [groupOfGroups, setGroupOfGroups] = useState([]);\r\n\r\n  const createGroupOfGroups = (rawData) => {\r\n    const allGroups = findDifferentGroups(rawData);\r\n    const groupOfAllGroups = [];\r\n    for (let i in allGroups) {\r\n      const newGroup = createNewGroup(allGroups[i], rawData);\r\n      groupOfAllGroups.push(newGroup);\r\n    }\r\n    return groupOfAllGroups;\r\n  };\r\n\r\n  const findDifferentGroups = (array) => {\r\n    const differentGroupCount = [];\r\n    for (let i in array) {\r\n      if (!differentGroupCount.includes(array[i].group)) {\r\n        differentGroupCount.push(array[i].group);\r\n      }\r\n    }\r\n    return differentGroupCount;\r\n  };\r\n\r\n  const createNewGroup = (groupName, dataForExtraction) => {\r\n    const newGroup = [];\r\n    for (let j in dataForExtraction) {\r\n      if (groupName === dataForExtraction[j].group) {\r\n        newGroup.push(dataForExtraction[j]);\r\n      }\r\n    }\r\n    return newGroup;\r\n  };\r\n\r\n  const setupPossibleYears = (dataToPickFrom) => {\r\n    const years = [];\r\n    for (let i in dataToPickFrom) {\r\n      const start = Number(\r\n        dataToPickFrom[i].start_date.split(\"\").splice(0, 4).join(\"\")\r\n      );\r\n      const end = Number(\r\n        dataToPickFrom[i].end_date.split(\"\").splice(0, 4).join(\"\")\r\n      );\r\n      if (!years.includes(start)) {\r\n        years.push(start);\r\n      }\r\n      if (!years.includes(end)) {\r\n        years.push(end);\r\n      }\r\n    }\r\n    years.sort((a, b) => (a < b ? 1 : -1));\r\n    return years;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const years = setupPossibleYears(timelineData);\r\n    setPossibleYears(years);\r\n    const group_of_groups = createGroupOfGroups(timelineData);\r\n    setGroupOfGroups(group_of_groups);\r\n    // eslint-disable-next-line\r\n  }, [timelineData]);\r\n\r\n  return (\r\n    <div\r\n      style={{ height: \"fit-content\" }}\r\n      className=\"text-gray-700 border-gray-400 border overflow-x-auto overflow-y-visible bg-white\"\r\n    >\r\n      <Header\r\n        globalYear={globalYear}\r\n        globalMonth={globalMonth}\r\n        newGlobalYear={(newGlobalYear) => setGlobalYear(newGlobalYear)}\r\n        newGlobalMonth={(newGlobalMonth) => setGlobalMonth(newGlobalMonth)}\r\n        possibleYears={possibleYears}\r\n      />\r\n      <Body\r\n        allGroups={groupOfGroups}\r\n        globalYear={globalYear}\r\n        globalMonth={globalMonth}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timeline;\r\n","import React from \"react\";\r\nimport { data_for_testing } from \"./timeline/CONSTANTS\";\r\nimport Timeline from \"./timeline/Timeline\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"flex justify-center items-center h-full w-full\">\r\n      <div className=\"w-3/4\">\r\n        <Timeline timelineData={data_for_testing} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}